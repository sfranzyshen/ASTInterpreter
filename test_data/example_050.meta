{
  "name": "StringComparisonOperators.ino",
  "source": "examples",
  "index": "050",
  "code": "// 08.Strings StringComparisonOperators\n\nString stringOne, stringTwo;\n\nvoid setup() {\n  // Open serial communications and wait for port to open:\n  Serial.begin(9600);\n  while (!Serial) {\n    ;\n  }\n\n\n  stringOne = String(\"this\");\n  stringTwo = String(\"that\");\n\n  // send an intro:\n  Serial.println(\"\\n\\nComparing Strings:\");\n  Serial.println();\n}\n\nvoid loop() {\n  // two Strings equal:\n  if (stringOne == \"this\") {\n    Serial.println(\"StringOne == \\\"this\\\"\");\n  }\n\n  // two Strings not equal:\n  if (stringOne != stringTwo) {\n    Serial.println(stringOne + \" =! \" + stringTwo);\n  }\n\n  // two Strings not equal (case sensitivity matters):\n  stringOne = \"This\";\n  stringTwo = \"this\";\n  if (stringOne != stringTwo) {\n    Serial.println(stringOne + \" =! \" + stringTwo);\n  }\n  // you can also use equals() to see if two Strings are the same:\n  if (stringOne.equals(stringTwo)) {\n    Serial.println(stringOne + \" equals \" + stringTwo);\n  } else {\n    Serial.println(stringOne + \" does not equal \" + stringTwo);\n  }\n\n  // or perhaps you want to ignore case:\n  if (stringOne.equalsIgnoreCase(stringTwo)) {\n    Serial.println(stringOne + \" equals (ignoring case) \" + stringTwo);\n  } else {\n    Serial.println(stringOne + \" does not equal (ignoring case) \" + stringTwo);\n  }\n\n  // a numeric String compared to the number it represents:\n  stringOne = \"1\";\n  int numberOne = 1;\n  if (stringOne.toInt() == numberOne) {\n    Serial.println(stringOne + \" = \" + numberOne);\n  }\n\n\n\n  // two numeric Strings compared:\n  stringOne = \"2\";\n  stringTwo = \"1\";\n  if (stringOne >= stringTwo) {\n    Serial.println(stringOne + \" >= \" + stringTwo);\n  }\n\n  // comparison operators can be used to compare Strings for alphabetic sorting too:\n  stringOne = String(\"Brown\");\n  if (stringOne < \"Charles\") {\n    Serial.println(stringOne + \" < Charles\");\n  }\n\n  if (stringOne > \"Adams\") {\n    Serial.println(stringOne + \" > Adams\");\n  }\n\n  if (stringOne <= \"Browne\") {\n    Serial.println(stringOne + \" <= Browne\");\n  }\n\n\n  if (stringOne >= \"Brow\") {\n    Serial.println(stringOne + \" >= Brow\");\n  }\n\n  // the compareTo() operator also allows you to compare Strings\n  stringOne = \"Cucumber\";\n  stringTwo = \"Cucuracha\";\n  if (stringOne.compareTo(stringTwo) < 0) {\n    Serial.println(stringOne + \" comes before \" + stringTwo);\n  } else {\n    Serial.println(stringOne + \" comes after \" + stringTwo);\n  }\n\n  delay(10000);\n\n  // compareTo() is handy when you've got Strings with numbers in them too:\n\n  while (true) {\n    stringOne = \"Sensor: \";\n    stringTwo = \"Sensor: \";\n\n    stringOne += analogRead(A0);\n    stringTwo += analogRead(A5);\n\n    if (stringOne.compareTo(stringTwo) < 0) {\n      Serial.println(stringOne + \" comes before \" + stringTwo);\n    } else {\n      Serial.println(stringOne + \" comes after \" + stringTwo);\n    }\n  }\n}\n",
  "astSize": 1232,
  "commandCount": 78,
  "generated": "2025-09-02T17:32:00.873Z"
}