{
  "name": "p12_KnockLock.ino",
  "source": "examples",
  "index": "074",
  "code": "// 10.StarterKit_BasicKit p12_KnockLock\n\n// import the library\n#include <Servo.h>\n// create an instance of the Servo library\nServo myServo;\n\nconst int piezo = A0;\nconst int switchPin = 2;\nconst int yellowLed = 3;\nconst int greenLed = 4;\nconst int redLed = 5;\n\n// variable for the piezo value\nint knockVal;\n// variable for the switch value\nint switchVal;\n\n// variables for the high and low limits of the knock value\nconst int quietKnock = 10;\nconst int loudKnock = 100;\n\n// variable to indicate if locked or not\nbool locked = false;\n// how many valid knocks you've received\nint numberOfKnocks = 0;\n\nvoid setup() {\n  // attach the servo to pin 9\n  myServo.attach(9);\n  // make the LED pins outputs\n  pinMode(yellowLed, OUTPUT);\n  pinMode(redLed, OUTPUT);\n  pinMode(greenLed, OUTPUT);\n  // set the switch pin as an input\n  pinMode(switchPin, INPUT);\n\n  // start serial communication for debugging\n  Serial.begin(9600);\n\n  // turn the green LED on\n  digitalWrite(greenLed, HIGH);\n\n  // move the servo to the unlocked position\n  myServo.write(0);\n\n  // print status to the Serial Monitor\n  Serial.println(\"the box is unlocked!\");\n}\n\nvoid loop() {\n\n  // if the box is unlocked\n  if (locked == false) {\n\n    // read the value of the switch pin\n    switchVal = digitalRead(switchPin);\n\n    // if the button is pressed, lock the box\n    if (switchVal == HIGH) {\n      // set the locked variable to \"true\"\n      locked = true;\n\n      // change the status LEDs\n      digitalWrite(greenLed, LOW);\n      digitalWrite(redLed, HIGH);\n\n      // move the servo to the locked position\n      myServo.write(90);\n\n      // print out status\n      Serial.println(\"the box is locked!\");\n\n      // wait for the servo to move into position\n      delay(1000);\n    }\n  }\n\n  // if the box is locked\n  if (locked == true) {\n\n    // check the value of the piezo\n    knockVal = analogRead(piezo);\n\n    // if there are not enough valid knocks\n    if (numberOfKnocks < 3 && knockVal > 0) {\n\n      // check to see if the knock is in range\n      if (checkForKnock(knockVal) == true) {\n\n        // increment the number of valid knocks\n        numberOfKnocks++;\n      }\n\n      // print status of knocks\n      Serial.print(3 - numberOfKnocks);\n      Serial.println(\" more knocks to go\");\n    }\n\n    // if there are three knocks\n    if (numberOfKnocks >= 3) {\n      // unlock the box\n      locked = false;\n\n      // move the servo to the unlocked position\n      myServo.write(0);\n\n      // wait for it to move\n      delay(20);\n\n      // change status LEDs\n      digitalWrite(greenLed, HIGH);\n      digitalWrite(redLed, LOW);\n      Serial.println(\"the box is unlocked!\");\n\n      numberOfKnocks = 0;\n    }\n  }\n}\n\n// this function checks to see if a detected knock is within max and min range\nbool checkForKnock(int value) {\n  // if the value of the knock is greater than the minimum, and larger\n  // than the maximum\n  if (value > quietKnock && value < loudKnock) {\n    // turn the status LED on\n    digitalWrite(yellowLed, HIGH);\n    delay(50);\n    digitalWrite(yellowLed, LOW);\n\n    // print out the status\n    Serial.print(\"Valid knock of value \");\n    Serial.println(value);\n\n    // return true\n    return true;\n  }\n  // if the knock is not within range\n  else {\n    // print status\n    Serial.print(\"Bad knock value \");\n    Serial.println(value);\n\n    // return false\n    return false;\n  }\n}\n",
  "astSize": 1342,
  "commandCount": 79,
  "generated": "2025-09-04T04:00:26.107Z"
}