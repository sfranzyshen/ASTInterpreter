{
  "name": "JoystickMouseControl.ino",
  "source": "examples",
  "index": "063",
  "code": "// 09.USB Mouse/JoystickMouseControl\n\n#include \"Mouse.h\"\n\n// set pin numbers for switch, joystick axes, and LED:\nconst int switchPin = 2;\nconst int mouseButton = 3;\nconst int xAxis = A0;\nconst int yAxis = A1;\nconst int ledPin = 5;\n\n// parameters for reading the joystick:\nint range = 12;\nint responseDelay = 5;\nint threshold = range / 4;\nint center = range / 2;\n\nbool mouseIsActive = false;\nint lastSwitchState = LOW;\n\nvoid setup() {\n  pinMode(switchPin, INPUT);\n  pinMode(mouseButton, INPUT);\n  pinMode(ledPin, OUTPUT);\n  // take control of the mouse:\n  Mouse.begin();\n}\n\nvoid loop() {\n  // read the switch:\n  int switchState = digitalRead(switchPin);\n\n  // if it's changed and it's high, toggle the mouse state:\n  if (switchState != lastSwitchState) {\n    if (switchState == HIGH) {\n      mouseIsActive = !mouseIsActive;\n      // turn on LED to indicate mouse state:\n      digitalWrite(ledPin, mouseIsActive);\n    }\n  }\n  // save switch state for next comparison:\n  lastSwitchState = switchState;\n\n  // read and scale the two axes:\n  int xReading = readAxis(A0);\n  int yReading = readAxis(A1);\n\n  // if the mouse control state is active, move the mouse:\n  if (mouseIsActive) {\n    Mouse.move(xReading, yReading, 0);\n  }\n\n  // read the mouse button and click or not click:\n  // if the mouse button is pressed:\n  if (digitalRead(mouseButton) == HIGH) {\n    // if the mouse is not pressed, press it:\n    if (!Mouse.isPressed(MOUSE_LEFT)) {\n      Mouse.press(MOUSE_LEFT);\n    }\n  }\n  // else the mouse button is not pressed:\n  else {\n    // if the mouse is pressed, release it:\n    if (Mouse.isPressed(MOUSE_LEFT)) {\n      Mouse.release(MOUSE_LEFT);\n    }\n  }\n\n  delay(responseDelay);\n}\n\n\nint readAxis(int thisAxis) {\n  // read the analog input:\n  int reading = analogRead(thisAxis);\n\n  // map the reading from the analog input range to the output range:\n  reading = map(reading, 0, 1023, 0, range);\n\n  // if the output reading is outside from the rest position threshold, use it:\n  int distance = reading - center;\n  if (abs(distance) < threshold) {\n    distance = 0;\n  }\n\n  // return the distance for this axis:\n  return distance;\n}\n",
  "astSize": 1547,
  "commandCount": 25,
  "generated": "2025-09-02T17:32:36.586Z"
}