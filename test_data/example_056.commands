[
  {
    "type": "VERSION_INFO",
    "timestamp": 1756834326171,
    "component": "interpreter",
    "version": "6.3.0",
    "status": "started"
  },
  {
    "type": "PROGRAM_START",
    "timestamp": 1756834326171,
    "message": "Program execution started"
  },
  {
    "type": "SETUP_START",
    "timestamp": 1756834326171,
    "message": "Executing setup() function"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.begin",
    "arguments": [
      9600
    ],
    "baudRate": 9600,
    "timestamp": 1756834326172,
    "message": "Serial.begin(9600)"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "start",
    "timestamp": 1756834326172,
    "message": "while loop started"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "end",
    "iterations": 0,
    "timestamp": 1756834326172,
    "message": "while loop completed (0 iterations)"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"\n\nString  substring():\""
    ],
    "data": "\n\nString  substring():",
    "timestamp": 1756834326172,
    "message": "Serial.println(\"\n\nString  substring():\")"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [],
    "timestamp": 1756834326172,
    "message": "Serial.println()"
  },
  {
    "type": "SETUP_END",
    "timestamp": 1756834326172,
    "message": "Completed setup() function"
  },
  {
    "type": "LOOP_START",
    "timestamp": 1756834326172,
    "message": "Starting loop() execution"
  },
  {
    "type": "LOOP_START",
    "timestamp": 1756834326172,
    "message": "Starting loop iteration 1"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "loop",
    "message": "Executing loop() iteration 1",
    "iteration": 1,
    "timestamp": 1756834326172
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Content-Type: text/html"
    },
    "timestamp": 1756834326173
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"Content-Type: text/html\""
    ],
    "data": "Content-Type: text/html",
    "timestamp": 1756834326173,
    "message": "Serial.println(\"Content-Type: text/html\")"
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834326174
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"It's an html file\""
    ],
    "data": "It's an html file",
    "timestamp": 1756834326174,
    "message": "Serial.println(\"It's an html file\")"
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834326174
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"It's a text-based file\""
    ],
    "data": "It's a text-based file",
    "timestamp": 1756834326174,
    "message": "Serial.println(\"It's a text-based file\")"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "start",
    "timestamp": 1756834326174,
    "message": "while loop started"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "iteration",
    "iteration": 0,
    "timestamp": 1756834326174,
    "message": "while loop iteration 0"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "iteration",
    "iteration": 1,
    "timestamp": 1756834326179,
    "message": "while loop iteration 1"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "iteration",
    "iteration": 2,
    "timestamp": 1756834326184,
    "message": "while loop iteration 2"
  },
  {
    "type": "LOOP_LIMIT_REACHED",
    "phase": "end",
    "iterations": 3,
    "timestamp": 1756834326190,
    "message": "While loop limit reached: completed 3 iterations (max: 3)"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "loop",
    "message": "Completed loop() iteration 1",
    "iteration": 1,
    "completed": true,
    "timestamp": 1756834326190
  },
  {
    "type": "LOOP_END",
    "timestamp": 1756834326195,
    "message": "Completed loop() execution (1 iterations)",
    "iterations": 1,
    "limitReached": false
  }
]