{
  "name": "p10_Zoetrope.ino",
  "source": "examples",
  "index": "072",
  "code": "// 10.StarterKit_BasicKit p10_Zoetrope\n\nconst int controlPin1 = 2;\nconst int controlPin2 = 3;\nconst int enablePin = 9;\nconst int directionSwitchPin = 4;\nconst int onOffSwitchStateSwitchPin = 5;\nconst int potPin = A0;\n\n// create some variables to hold values from your inputs\nint onOffSwitchState = 0;\nint previousOnOffSwitchState = 0;\nint directionSwitchState = 0;\nint previousDirectionSwitchState = 0;\n\nint motorEnabled = 0;\nint motorSpeed = 0;\nint motorDirection = 1;\n\nvoid setup() {\n  // initialize the inputs and outputs\n  pinMode(directionSwitchPin, INPUT);\n  pinMode(onOffSwitchStateSwitchPin, INPUT);\n  pinMode(controlPin1, OUTPUT);\n  pinMode(controlPin2, OUTPUT);\n  pinMode(enablePin, OUTPUT);\n\n  // pull the enable pin LOW to start\n  digitalWrite(enablePin, LOW);\n}\n\nvoid loop() {\n  // read the value of the on/off switch\n  onOffSwitchState = digitalRead(onOffSwitchStateSwitchPin);\n  delay(1);\n  // read the value of the direction switch\n  directionSwitchState = digitalRead(directionSwitchPin);\n\n  // read the value of the pot and divide by 4 to get a value that can be\n  // used for PWM\n  motorSpeed = analogRead(potPin) / 4;\n\n  // if the on/off button changed state since the last loop()\n  if (onOffSwitchState != previousOnOffSwitchState) {\n    // change the value of motorEnabled if pressed\n    if (onOffSwitchState == HIGH) {\n      motorEnabled = !motorEnabled;\n    }\n  }\n\n  // if the direction button changed state since the last loop()\n  if (directionSwitchState != previousDirectionSwitchState) {\n    // change the value of motorDirection if pressed\n    if (directionSwitchState == HIGH) {\n      motorDirection = !motorDirection;\n    }\n  }\n\n  // change the direction the motor spins by talking to the control pins\n  // on the H-Bridge\n  if (motorDirection == 1) {\n    digitalWrite(controlPin1, HIGH);\n    digitalWrite(controlPin2, LOW);\n  } else {\n    digitalWrite(controlPin1, LOW);\n    digitalWrite(controlPin2, HIGH);\n  }\n\n  // if the motor is supposed to be on\n  if (motorEnabled == 1) {\n    // PWM the enable pin to vary the speed\n    analogWrite(enablePin, motorSpeed);\n  } else {\n    //turn the motor off\n    analogWrite(enablePin, 0);\n  }\n\n  // save the current on/off switch state as the previous\n  previousDirectionSwitchState = directionSwitchState;\n  // save the current switch state as the previous\n  previousOnOffSwitchState = onOffSwitchState;\n}\n",
  "astSize": 1219,
  "commandCount": 29,
  "generated": "2025-09-02T17:32:57.179Z"
}