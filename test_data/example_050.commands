[
  {
    "type": "VERSION_INFO",
    "timestamp": 1756834320814,
    "component": "interpreter",
    "version": "6.3.0",
    "status": "started"
  },
  {
    "type": "PROGRAM_START",
    "timestamp": 1756834320814,
    "message": "Program execution started"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": null,
    "timestamp": 1756834320815
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": null,
    "timestamp": 1756834320815
  },
  {
    "type": "SETUP_START",
    "timestamp": 1756834320815,
    "message": "Executing setup() function"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.begin",
    "arguments": [
      9600
    ],
    "baudRate": 9600,
    "timestamp": 1756834320815,
    "message": "Serial.begin(9600)"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "start",
    "timestamp": 1756834320815,
    "message": "while loop started"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "end",
    "iterations": 0,
    "timestamp": 1756834320815,
    "message": "while loop completed (0 iterations)"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "this"
    },
    "timestamp": 1756834320816
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "that"
    },
    "timestamp": 1756834320817
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"\n\nComparing Strings:\""
    ],
    "data": "\n\nComparing Strings:",
    "timestamp": 1756834320817,
    "message": "Serial.println(\"\n\nComparing Strings:\")"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [],
    "timestamp": 1756834320817,
    "message": "Serial.println()"
  },
  {
    "type": "SETUP_END",
    "timestamp": 1756834320817,
    "message": "Completed setup() function"
  },
  {
    "type": "LOOP_START",
    "timestamp": 1756834320817,
    "message": "Starting loop() execution"
  },
  {
    "type": "LOOP_START",
    "timestamp": 1756834320817,
    "message": "Starting loop iteration 1"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "loop",
    "message": "Executing loop() iteration 1",
    "iteration": 1,
    "timestamp": 1756834320817
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320817
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"StringOne == \"this\"\""
    ],
    "data": "StringOne == \"this\"",
    "timestamp": 1756834320818,
    "message": "Serial.println(\"StringOne == \"this\"\")"
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320818
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"this =! that\""
    ],
    "data": "this =! that",
    "timestamp": 1756834320818,
    "message": "Serial.println(\"this =! that\")"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "This"
    },
    "timestamp": 1756834320819
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "this"
    },
    "timestamp": 1756834320819
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320819
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"This =! this\""
    ],
    "data": "This =! this",
    "timestamp": 1756834320820,
    "message": "Serial.println(\"This =! this\")"
  },
  {
    "type": "IF_STATEMENT",
    "condition": false,
    "result": false,
    "branch": "else",
    "timestamp": 1756834320820
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"This does not equal this\""
    ],
    "data": "This does not equal this",
    "timestamp": 1756834320820,
    "message": "Serial.println(\"This does not equal this\")"
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320821
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"This equals (ignoring case) this\""
    ],
    "data": "This equals (ignoring case) this",
    "timestamp": 1756834320821,
    "message": "Serial.println(\"This equals (ignoring case) this\")"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "1"
    },
    "timestamp": 1756834320822
  },
  {
    "type": "VAR_SET",
    "variable": "numberOne",
    "value": 1,
    "timestamp": 1756834320822
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320822
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"1 = 1\""
    ],
    "data": "1 = 1",
    "timestamp": 1756834320825,
    "message": "Serial.println(\"1 = 1\")"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "2"
    },
    "timestamp": 1756834320825
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "1"
    },
    "timestamp": 1756834320826
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320826
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"2 >= 1\""
    ],
    "data": "2 >= 1",
    "timestamp": 1756834320826,
    "message": "Serial.println(\"2 >= 1\")"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Brown"
    },
    "timestamp": 1756834320828
  },
  {
    "type": "IF_STATEMENT",
    "condition": false,
    "result": false,
    "branch": "else",
    "timestamp": 1756834320828
  },
  {
    "type": "IF_STATEMENT",
    "condition": false,
    "result": false,
    "branch": "else",
    "timestamp": 1756834320828
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320828
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"Brown <= Browne\""
    ],
    "data": "Brown <= Browne",
    "timestamp": 1756834320829,
    "message": "Serial.println(\"Brown <= Browne\")"
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320829
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"Brown >= Brow\""
    ],
    "data": "Brown >= Brow",
    "timestamp": 1756834320830,
    "message": "Serial.println(\"Brown >= Brow\")"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Cucumber"
    },
    "timestamp": 1756834320830
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "Cucuracha"
    },
    "timestamp": 1756834320830
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320831
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"Cucumber comes before Cucuracha\""
    ],
    "data": "Cucumber comes before Cucuracha",
    "timestamp": 1756834320831,
    "message": "Serial.println(\"Cucumber comes before Cucuracha\")"
  },
  {
    "type": "DELAY",
    "duration": 10000,
    "actualDelay": 10000,
    "timestamp": 1756834320832
  },
  {
    "type": "WHILE_LOOP",
    "phase": "start",
    "timestamp": 1756834320832,
    "message": "while loop started"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "iteration",
    "iteration": 0,
    "timestamp": 1756834320832,
    "message": "while loop iteration 0"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Sensor: "
    },
    "timestamp": 1756834320832
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "Sensor: "
    },
    "timestamp": 1756834320833
  },
  {
    "type": "ANALOG_READ_REQUEST",
    "pin": 14,
    "requestId": "analogRead_1756834320833_0.9866868116899707",
    "timestamp": 1756834320833
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Sensor: 424"
    },
    "timestamp": 1756834320834
  },
  {
    "type": "ANALOG_READ_REQUEST",
    "pin": 19,
    "requestId": "analogRead_1756834320835_0.04363913719215784",
    "timestamp": 1756834320835
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "Sensor: 526"
    },
    "timestamp": 1756834320836
  },
  {
    "type": "IF_STATEMENT",
    "condition": true,
    "result": true,
    "branch": "then",
    "timestamp": 1756834320837
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"Sensor: 424 comes before Sensor: 526\""
    ],
    "data": "Sensor: 424 comes before Sensor: 526",
    "timestamp": 1756834320837,
    "message": "Serial.println(\"Sensor: 424 comes before Sensor: 526\")"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "iteration",
    "iteration": 1,
    "timestamp": 1756834320842,
    "message": "while loop iteration 1"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Sensor: "
    },
    "timestamp": 1756834320842
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "Sensor: "
    },
    "timestamp": 1756834320843
  },
  {
    "type": "ANALOG_READ_REQUEST",
    "pin": 14,
    "requestId": "analogRead_1756834320843_0.7794623743505729",
    "timestamp": 1756834320843
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Sensor: 937"
    },
    "timestamp": 1756834320844
  },
  {
    "type": "ANALOG_READ_REQUEST",
    "pin": 19,
    "requestId": "analogRead_1756834320845_0.9229256815975233",
    "timestamp": 1756834320845
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "Sensor: 930"
    },
    "timestamp": 1756834320846
  },
  {
    "type": "IF_STATEMENT",
    "condition": false,
    "result": false,
    "branch": "else",
    "timestamp": 1756834320847
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"Sensor: 937 comes after Sensor: 930\""
    ],
    "data": "Sensor: 937 comes after Sensor: 930",
    "timestamp": 1756834320847,
    "message": "Serial.println(\"Sensor: 937 comes after Sensor: 930\")"
  },
  {
    "type": "WHILE_LOOP",
    "phase": "iteration",
    "iteration": 2,
    "timestamp": 1756834320852,
    "message": "while loop iteration 2"
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Sensor: "
    },
    "timestamp": 1756834320853
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "Sensor: "
    },
    "timestamp": 1756834320853
  },
  {
    "type": "ANALOG_READ_REQUEST",
    "pin": 14,
    "requestId": "analogRead_1756834320853_0.499647793836437",
    "timestamp": 1756834320853
  },
  {
    "type": "VAR_SET",
    "variable": "stringOne",
    "value": {
      "value": "Sensor: 638"
    },
    "timestamp": 1756834320855
  },
  {
    "type": "ANALOG_READ_REQUEST",
    "pin": 19,
    "requestId": "analogRead_1756834320855_0.4849673045454477",
    "timestamp": 1756834320855
  },
  {
    "type": "VAR_SET",
    "variable": "stringTwo",
    "value": {
      "value": "Sensor: 373"
    },
    "timestamp": 1756834320856
  },
  {
    "type": "IF_STATEMENT",
    "condition": false,
    "result": false,
    "branch": "else",
    "timestamp": 1756834320857
  },
  {
    "type": "FUNCTION_CALL",
    "function": "Serial.println",
    "arguments": [
      "\"Sensor: 638 comes after Sensor: 373\""
    ],
    "data": "Sensor: 638 comes after Sensor: 373",
    "timestamp": 1756834320857,
    "message": "Serial.println(\"Sensor: 638 comes after Sensor: 373\")"
  },
  {
    "type": "LOOP_LIMIT_REACHED",
    "phase": "end",
    "iterations": 3,
    "timestamp": 1756834320862,
    "message": "While loop limit reached: completed 3 iterations (max: 3)"
  },
  {
    "type": "FUNCTION_CALL",
    "function": "loop",
    "message": "Completed loop() iteration 1",
    "iteration": 1,
    "completed": true,
    "timestamp": 1756834320862
  }
]