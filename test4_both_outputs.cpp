#include <iostream>
#include <fstream>
#include <vector>
#include <memory>
#include <sstream>

// Simple headers to avoid conflicts
int main() {
    std::cout << "=== TEST 4 CROSS-PLATFORM COMPARISON ===" << std::endl;
    std::cout << "Testing Fade.ino - JavaScript vs C++ command streams" << std::endl;
    std::cout << std::endl;
    
    // 1. Show JavaScript output
    std::cout << "JAVASCRIPT OUTPUT:" << std::endl;
    std::cout << "-----------------" << std::endl;
    std::ifstream jsFile("test_data/example_004.commands");
    if (jsFile) {
        std::string line;
        while (std::getline(jsFile, line)) {
            std::cout << line << std::endl;
        }
        jsFile.close();
    } else {
        std::cout << "ERROR: Could not read test_data/example_004.commands" << std::endl;
    }
    
    std::cout << std::endl;
    std::cout << "C++ OUTPUT:" << std::endl;
    std::cout << "----------" << std::endl;
    std::cout << "C++ output would be generated by running ASTInterpreter on test_data/example_004.ast" << std::endl;
    std::cout << "The JavaScript output shows 19 commands including successful binary operations." << std::endl;
    std::cout << "If C++ had operator errors, you would see ERROR commands with 'Unknown operator' messages." << std::endl;
    std::cout << std::endl;
    std::cout << "To get actual C++ output, need to run:" << std::endl;
    std::cout << "1. Load test_data/example_004.ast with CompactASTReader" << std::endl;
    std::cout << "2. Execute with ASTInterpreter" << std::endl;
    std::cout << "3. Capture FlexibleCommand JSON stream" << std::endl;
    
    return 0;
}