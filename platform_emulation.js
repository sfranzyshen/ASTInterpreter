#!/usr/bin/env node
const PLATFORM_EMULATION_VERSION='1.0.0';const ESP32_NANO_PLATFORM={name:'ESP32_NANO',displayName:'Arduino Nano ESP32',defines:{'ESP32':'1','ARDUINO_NANO_ESP32':'1','ARDUINO':'2030100','ARDUINO_ESP32_NANO':'1','ESP32_S3':'1','NORA_W106':'1','WIFI_SUPPORT':'1','BLUETOOTH_SUPPORT':'1','BLE_SUPPORT':'1','USB_C_SUPPORT':'1','FLASH_SIZE':'16777216','RAM_SIZE':'524288','PSRAM_SIZE':'8388608','OPERATING_VOLTAGE':'3300','MAX_PIN_CURRENT':'40','VIN_MIN':'5000','VIN_MAX':'18000',},pins:{'D0':0,'D1':1,'D2':2,'D3':3,'D4':4,'D5':5,'D6':6,'D7':7,'D8':8,'D9':9,'D10':10,'D11':11,'D12':12,'D13':13,'A0':14,'A1':15,'A2':16,'A3':17,'A4':18,'A5':19,'A6':20,'A7':21,'LED_BUILTIN':13,'LED_RED':46,'LED_GREEN':45,'LED_BLUE':44,'SDA':18,'SCL':19,'MOSI':11,'MISO':12,'SCK':13,'SS':10,'TX':1,'RX':0,'VIN':-1,'VBUS':-2,'V3V3':-3,'GND':-4,},pinCapabilities:{pwm:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],analog:[14,15,16,17,18,19,20,21],digital:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],i2c:[18,19],spi:[10,11,12,13],serial:[0,1],},libraries:['WiFi','WiFiClient','WiFiServer','WiFiUDP','BluetoothSerial','BLE','Wire','SPI','Servo','Stepper','EEPROM','SD','Adafruit_NeoPixel','FastLED','ArduinoJson','PubSubClient','HTTPClient','WebServer','Update','Preferences',],clocks:{'CPU_FREQ':'240000000','APB_FREQ':'80000000','XTAL_FREQ':'40000000',},memory:{'FLASH_START':'0x10000','RAM_START':'0x3FC88000','PSRAM_START':'0x3F800000',}};const ARDUINO_UNO_PLATFORM={name:'ARDUINO_UNO',displayName:'Arduino Uno',defines:{'ARDUINO_AVR_UNO':'1','ARDUINO':'2030100','ATMEGA328P':'1',},pins:{'D0':0,'D1':1,'D2':2,'D3':3,'D4':4,'D5':5,'D6':6,'D7':7,'D8':8,'D9':9,'D10':10,'D11':11,'D12':12,'D13':13,'A0':14,'A1':15,'A2':16,'A3':17,'A4':18,'A5':19,'LED_BUILTIN':13,'SDA':18,'SCL':19,'MOSI':11,'MISO':12,'SCK':13,'SS':10,'TX':1,'RX':0,},pinCapabilities:{pwm:[3,5,6,9,10,11],analog:[14,15,16,17,18,19],digital:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],i2c:[18,19],spi:[10,11,12,13],serial:[0,1],},libraries:['SoftwareSerial','Wire','SPI','Servo','Stepper','EEPROM','LiquidCrystal','SD'],clocks:{'CPU_FREQ':'16000000',}};class PlatformEmulation{constructor(platformName='ESP32_NANO'){this.version=PLATFORM_EMULATION_VERSION;this.currentPlatform=null;this.availablePlatforms={'ESP32_NANO':ESP32_NANO_PLATFORM,'ARDUINO_UNO':ARDUINO_UNO_PLATFORM};this.setPlatform(platformName);console.log(`üéØ Platform Emulation v${this.version} initialized`);console.log(`üì± Current Platform: ${this.currentPlatform.displayName}`)}
setPlatform(platformName){if(!this.availablePlatforms[platformName]){throw new Error(`Platform '${platformName}' not supported. Available: ${Object.keys(this.availablePlatforms).join(', ')}`)}
this.currentPlatform=this.availablePlatforms[platformName];console.log(`üîÑ Switched to platform: ${this.currentPlatform.displayName}`);return this.currentPlatform}
getDefines(){return{...this.currentPlatform.defines}}
getPin(pinName){return this.currentPlatform.pins[pinName]||null}
pinSupports(pin,capability){const caps=this.currentPlatform.pinCapabilities[capability];return caps&&caps.includes(pin)}
getLibraries(){return[...this.currentPlatform.libraries]}
hasLibrary(libraryName){return this.currentPlatform.libraries.includes(libraryName)}
getPlatformInfo(){return{name:this.currentPlatform.name,displayName:this.currentPlatform.displayName,defines:Object.keys(this.currentPlatform.defines).length,pins:Object.keys(this.currentPlatform.pins).length,libraries:this.currentPlatform.libraries.length,capabilities:Object.keys(this.currentPlatform.pinCapabilities)}}}
if(typeof window!=='undefined'){window.PlatformEmulation=PlatformEmulation;window.ESP32_NANO_PLATFORM=ESP32_NANO_PLATFORM;window.ARDUINO_UNO_PLATFORM=ARDUINO_UNO_PLATFORM;window.PLATFORM_EMULATION_VERSION=PLATFORM_EMULATION_VERSION}else if(typeof module!=='undefined'&&module.exports){module.exports={PlatformEmulation,ESP32_NANO_PLATFORM,ARDUINO_UNO_PLATFORM,PLATFORM_EMULATION_VERSION}}
if(require.main===module){console.log('\nüß™ Platform Emulation Test');console.log('===========================');const platform=new PlatformEmulation('ESP32_NANO');console.log('\nüìä Platform Info:');console.log(platform.getPlatformInfo());console.log('\nüìç Pin Examples:');console.log(`LED_BUILTIN: ${platform.getPin('LED_BUILTIN')}`);console.log(`A0: ${platform.getPin('A0')}`);console.log(`SDA: ${platform.getPin('SDA')}`);console.log('\nüîß Pin Capabilities:');console.log(`Pin 3 PWM support: ${platform.pinSupports(3, 'pwm')}`);console.log(`Pin 14 (A0) analog support: ${platform.pinSupports(14, 'analog')}`);console.log('\nüìö Library Support:');console.log(`WiFi available: ${platform.hasLibrary('WiFi')}`);console.log(`Bluetooth available: ${platform.hasLibrary('BluetoothSerial')}`);console.log('\nüîÑ Platform Switching Test:');platform.setPlatform('ARDUINO_UNO');console.log(`WiFi available on Uno: ${platform.hasLibrary('WiFi')}`);console.log(`Pin 3 PWM support on Uno: ${platform.pinSupports(3, 'pwm')}`)}