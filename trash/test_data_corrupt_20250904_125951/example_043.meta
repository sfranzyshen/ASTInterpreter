{
  "name": "RowColumnScanning.ino",
  "source": "examples",
  "index": "043",
  "code": "// 07.Display RowColumnScanning.ino\n\n// 2-dimensional array of row pin numbers:\nconst int row[8] = {\n  2, 7, 19, 5, 13, 18, 12, 16\n};\n// 2-dimensional array of column pin numbers:\nconst int col[8] = {\n  6, 11, 10, 3, 17, 4, 8, 9\n};\n// 2-dimensional array of pixels:\nint pixels[8][8];\n\n// cursor position:\nint x = 5;\nint y = 5;\n\nvoid setup() {\n  // initialize the I/O pins as outputs iterate over the pins:\n  for (int thisPin = 0; thisPin < 8; thisPin++) {\n    // initialize the output pins:\n    pinMode(col[thisPin], OUTPUT);\n    pinMode(row[thisPin], OUTPUT);\n    // take the col pins (i.e. the cathodes) high to ensure that the LEDS are off:\n    digitalWrite(col[thisPin], HIGH);\n  }\n\n  // initialize the pixel matrix:\n  for (int x = 0; x < 8; x++) {\n    for (int y = 0; y < 8; y++) {\n      pixels[x][y] = HIGH;\n    }\n  }\n}\n\nvoid loop() {\n  // read input:\n  readSensors();\n\n  // draw the screen:\n  refreshScreen();\n}\n\nvoid readSensors() {\n  // turn off the last position:\n  pixels[x][y] = HIGH;\n  // read the sensors for X and Y values:\n  x = 7 - map(analogRead(A0), 0, 1023, 0, 7);\n  y = map(analogRead(A1), 0, 1023, 0, 7);\n  // set the new pixel position low so that the LED will turn on in the next\n  // screen refresh:\n  pixels[x][y] = LOW;\n}\n\nvoid refreshScreen() {\n  // iterate over the rows (anodes):\n  for (int thisRow = 0; thisRow < 8; thisRow++) {\n    // take the row pin (anode) high:\n    digitalWrite(row[thisRow], HIGH);\n\n    // iterate over the cols (cathodes):\n    for (int thisCol = 0; thisCol < 8; thisCol++) {\n      // get the state of the current pixel;\n      int thisPixel = pixels[thisRow][thisCol];\n\n      // when the row is HIGH and the col is LOW,\n      // the LED where they meet turns on:\n      digitalWrite(col[thisCol], thisPixel);\n\n      // turn the pixel off:\n      if (thisPixel == LOW) {\n        digitalWrite(col[thisCol], HIGH);\n      }\n    }\n    // take the row pin low to turn off the whole row:\n    digitalWrite(row[thisRow], LOW);\n  }\n}\n",
  "astSize": 1042,
  "commandCount": 27,
  "generated": "2025-09-04T04:00:23.248Z"
}