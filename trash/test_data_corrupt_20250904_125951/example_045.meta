{
  "name": "CharacterAnalysis",
  "source": "examples",
  "index": "045",
  "code": "// 08.Strings CharacterAnalysis\n\nvoid setup() {\n  // Open serial communications and wait for port to open:\n  Serial.begin(9600);\n  while (!Serial) {\n    ;\n  }\n\n  // send an intro:\n  Serial.println(\"send any byte and I'll tell you everything I can about it\");\n  Serial.println();\n}\n\nvoid loop() {\n  // get any incoming bytes:\n  if (Serial.available() > 0) {\n    int thisChar = Serial.read();\n\n    // say what was sent:\n    Serial.print(\"You sent me: '\");\n    Serial.write(thisChar);\n    Serial.print(\"'  ASCII Value: \");\n    Serial.println(thisChar);\n\n    // analyze what was sent:\n    if (isAlphaNumeric(thisChar)) {\n      Serial.println(\"it's alphanumeric\");\n    }\n    if (isAlpha(thisChar)) {\n      Serial.println(\"it's alphabetic\");\n    }\n    if (isAscii(thisChar)) {\n      Serial.println(\"it's ASCII\");\n    }\n    if (isWhitespace(thisChar)) {\n      Serial.println(\"it's whitespace\");\n    }\n    if (isControl(thisChar)) {\n      Serial.println(\"it's a control character\");\n    }\n    if (isDigit(thisChar)) {\n      Serial.println(\"it's a numeric digit\");\n    }\n    if (isGraph(thisChar)) {\n      Serial.println(\"it's a printable character that's not whitespace\");\n    }\n    if (isLowerCase(thisChar)) {\n      Serial.println(\"it's lower case\");\n    }\n    if (isPrintable(thisChar)) {\n      Serial.println(\"it's printable\");\n    }\n    if (isPunct(thisChar)) {\n      Serial.println(\"it's punctuation\");\n    }\n    if (isSpace(thisChar)) {\n      Serial.println(\"it's a space character\");\n    }\n    if (isUpperCase(thisChar)) {\n      Serial.println(\"it's upper case\");\n    }\n    if (isHexadecimalDigit(thisChar)) {\n      Serial.println(\"it's a valid hexadecimaldigit (i.e. 0 - 9, a - F, or A - F)\");\n    }\n\n    // add some space and ask for another byte:\n    Serial.println();\n    Serial.println(\"Give me another byte:\");\n    Serial.println();\n  }\n}\n",
  "astSize": 1084,
  "commandCount": 28,
  "generated": "2025-09-04T04:00:23.444Z"
}