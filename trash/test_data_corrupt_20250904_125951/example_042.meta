{
  "name": "Ping.ino",
  "source": "examples",
  "index": "042",
  "code": "// 06.Sensors Ping.ino\n\n// this constant won't change. It's the pin number of the sensor's output:\nconst int pingPin = 7;\n\nvoid setup() {\n  // initialize serial communication:\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  // establish variables for duration of the ping, and the distance result\n  // in inches and centimeters:\n  long duration, inches, cm;\n\n  // The PING))) is triggered by a HIGH pulse of 2 or more microseconds.\n  // Give a short LOW pulse beforehand to ensure a clean HIGH pulse:\n  pinMode(pingPin, OUTPUT);\n  digitalWrite(pingPin, LOW);\n  delayMicroseconds(2);\n  digitalWrite(pingPin, HIGH);\n  delayMicroseconds(5);\n  digitalWrite(pingPin, LOW);\n\n  // The same pin is used to read the signal from the PING))): a HIGH pulse\n  // whose duration is the time (in microseconds) from the sending of the ping\n  // to the reception of its echo off of an object.\n  pinMode(pingPin, INPUT);\n  duration = pulseIn(pingPin, HIGH);\n\n  // convert the time into a distance\n  inches = microsecondsToInches(duration);\n  cm = microsecondsToCentimeters(duration);\n\n  Serial.print(inches);\n  Serial.print(\"in, \");\n  Serial.print(cm);\n  Serial.print(\"cm\");\n  Serial.println();\n\n  delay(100);\n}\n\nlong microsecondsToInches(long microseconds) {\n  // According to Parallax's datasheet for the PING))), there are 73.746\n  // microseconds per inch (i.e. sound travels at 1130 feet per second).\n  // This gives the distance travelled by the ping, outbound and return,\n  // so we divide by 2 to get the distance of the obstacle.\n  return microseconds / 74 / 2;\n}\n\nlong microsecondsToCentimeters(long microseconds) {\n  // The speed of sound is 340 m/s or 29 microseconds per centimeter.\n  // The ping travels out and back, so to find the distance of the object we\n  // take half of the distance travelled.\n  return microseconds / 29 / 2;\n}\n",
  "astSize": 531,
  "commandCount": 85,
  "generated": "2025-09-04T04:00:23.145Z"
}